---
name: Docker workflow

on:
  push:
    branches:
    - main
    tags:
      - 'v*'
  pull_request:
    branches:
    - main
  workflow_dispatch:

jobs:
  test_1:
    name: Docker
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Docker meta
      id: meta_1
      uses: docker/metadata-action@v4
      with:
        images: name/app
      #
      # Event	            Ref	                      Docker Tags
      # pull_request	    refs/pull/2/merge	        pr-2
      # push	            refs/heads/master	        master
      # push	            refs/heads/releases/v1	  releases-v1
      # push tag	        refs/tags/v1.2.3	        v1.2.3, latest
      # push tag	        refs/tags/v2.0.8-beta.67	v2.0.8-beta.67, latest
      # workflow_dispatch	refs/heads/master	        master
    -
      name: Docker meta
      id: meta_2
      uses: docker/metadata-action@v4
      with:
        images: name/app
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
      #
      # Event	        Ref	                      Docker Tags
      # pull_request	refs/pull/2/merge	        pr-2
      # push	        refs/heads/master	        master
      # push	        refs/heads/releases/v1	  releases-v1
      # push tag	    refs/tags/v1.2.3	        1.2.3, 1.2, latest
      # push tag	    refs/tags/v2.0.8-beta.67	2.0.8-beta.67
    -
      name: Echo
      run: |
        echo "1 tags   : ${{ steps.meta_1.outputs.tags }}"
        echo "1 labels : ${{ steps.meta_1.outputs.labels }}"
        echo "2 tags   : ${{ steps.meta_2.outputs.tags }}"
        echo "2 labels : ${{ steps.meta_2.outputs.labels }}"
    -
      name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
          - Third Change
        draft: false
        prerelease: true
    -
      name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./.github/workflows/docker.yaml
        asset_name: docker-release.yaml
        asset_content_type: application/yaml
...
