---
name: Deploy to AWS App Runner
on:
  workflow_call:
    inputs:
      docker_image_name:
        required: true
        type: string
      docker_image_port:
        required: false
        type: number
        default: 8080
      environment:
        required: false
        type: string
      sandbox_environment:
        required: false
        type: string
      develop_environment:
        required: false
        type: string
      test_environment:
        required: false
        type: string
      stage_environment:
        required: false
        type: string
      production_environment:
        required: false
        type: string
      # NOTE: App Runner
      app_runner_cpu:
        required: false
        type: number
        default: 1
      app_runner_memory:
        required: false
        type: number
        default: 2
      app_runner_variables:
        required: false
        type: string
        default: "[]"
      app_runner_secrets:
        required: false
        type: string
        default: "[]"
      # NOTE: AWS
      aws_region:
        required: false
        type: string
        default: us-east-1
      aws_role_arn: # FIXME: arn:aws:iam::123456789012:role/my-github-actions-role
        required: false
        type: string
      aws_access_key_id:
        required: false
        type: string
      aws_secret_access_key:
        required: false
        type: string
      zap_rules_file_name:
        required: false
        type: string
      # NOTE: GitHub Actions
      runs-on:
        required: false
        type: string
        default: ubuntu-latest
      timeout:
        required: false
        type: number
        default: 60
    secrets:
      aws_access_key_id:
        required: false
      aws_secret_access_key:
        required: false
    outputs:
      web_app_url:
        description: App Runner url
        value: ${{ jobs.deploy.outputs.web_app_url }}
jobs:
  deploy:
    name: App Runner
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: ${{ inputs.timeout }}
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.deploy-aws-apprunner.outputs.service-url }}
    if: ${{ github.event_name != 'pull_request' }}
    outputs:
      web_app_url: ${{ steps.deploy-aws-apprunner.outputs.service-url }}
    steps:
      - name: Debug Info
        run: |
          echo "inputs.docker_image_name: ${{ inputs.docker_image_name }}"
          echo "inputs.environment: ${{ inputs.environment }}"
          echo "inputs.test_environment: ${{ inputs.test_environment }}"
          echo "inputs.stage_environment: ${{ inputs.stage_environment }}"
          echo "inputs.aws_access_key_id: ${{ inputs.aws_access_key_id }}"
          echo "inputs.aws_secret_access_key: ${{ inputs.aws_secret_access_key }}"
          echo "inputs.aws_role_arn: ${{ inputs.aws_role_arn }}"
      - name: Checkout
        if: ${{ inputs.zap_rules_file_name != '' }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure AWS credentials
        id: aws-config
        if: ${{ inputs.aws_role_arn != '' || (inputs.aws_access_key_id == 'true' && inputs.aws_secret_access_key == 'true') }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          aws-access-key-id: ${{ inputs.aws_access_key_id == 'true' && secrets.aws_access_key_id || '' }}
          aws-secret-access-key: ${{ inputs.aws_secret_access_key == 'true' && secrets.aws_secret_access_key || '' }}
          role-to-assume: ${{ inputs.aws_role_arn }}
      - name: Deploy to App Runner
        id: deploy-aws-apprunner
        if: ${{ steps.aws-config.outcome == 'success' }}
        uses: awslabs/amazon-app-runner-deploy@v2.5.2
        with:
          service: ${{ github.event.repository.name }}
          image: ${{ inputs.docker_image_name }}
          port: ${{ inputs.docker_image_port }}
          access-role-arn: ${{ inputs.aws_role_arn }}
          region: ${{ inputs.aws_region }}
          cpu: ${{ inputs.app_runner_cpu }}
          memory: ${{ inputs.app_runner_memory }}
          copy-env-vars: ${{ inputs.app_runner_variables }}
          copy-secret-env-vars: ${{ inputs.app_runner_secrets }}
          wait-for-service-stability-seconds: 600
          tags: >
            {
              "Name": ${{ github.event.repository.name }},
              "Environment": ${{ inputs.environment }},
              "Provisioner": "GitHub Actions"
            }
      # TODO: Remove
      - name: Test deploy
        id: deploy
        run: echo "Test deploy"
      - name: Create/update PR
        if: ${{ always() }}
        # && (startsWith(github.ref_name, 'release/') || startsWith(github.ref_name, 'hotfix/')) }}
        uses: mxbp/github-pipelines/actions/pr-prepare@main
        with:
          environment: ${{ inputs.environment }}
          deploy_status: ${{ steps.deploy.outcome }}
          sandbox_environment: ${{ inputs.sandbox_environment }}
          develop_environment: ${{ inputs.develop_environment }}
          test_environment: ${{ inputs.test_environment }}
          stage_environment: ${{ inputs.stage_environment }}
          # production_environment: ${{ inputs.production_environment }}
      - name: DAST OWASP ZAP
        if: ${{ steps.deploy-aws-apprunner.outputs.web_app_url != '' }}
        uses: mxbp/github-pipelines/actions/dast-owasp-zap@main
        with:
          target_url: ${{ steps.deploy-aws-apprunner.outputs.web_app_url }}
