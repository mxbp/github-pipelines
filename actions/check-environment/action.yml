---
name: Environment
description: Environment Identification
inputs:
  environment:
    description: Environment
    required: false
  sandbox_environment:
    description: Sandbox
    required: false
  develop_environment:
    description: Develop
    required: false
  test_environment:
    description: Test
    required: false
  stage_environment:
    description: Stage
    required: false
  production_environment:
    description: Production
    required: false
  timeout:
    description: Timeout
    required: false
    default: "60"
outputs:
  environment:
    description: Environment
    value: ${{ steps.check-environment.outputs.environment  }}
runs:
  using: composite
  steps:
    - name: Checking
      id: check-environment
      env:
        GH_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
        GH_CURRENT_BRANCH: ${{ github.ref_name }}
        GH_INPUT_ENVIRONMENT: ${{ inputs.environment }}
        GH_ENV_SBX: ${{ inputs.sandbox_environment }}
        GH_ENV_DEV: ${{ inputs.develop_environment }}
        GH_ENV_TST: ${{ inputs.test_environment }}
        GH_ENV_STG: ${{ inputs.stage_environment }}
        GH_ENV_PROD: ${{ inputs.production_environment }}
      shell: bash
      run: |
        #!/bin/bash

        set GH_CURRENT_BRANCH
        set GH_DEFAULT_BRANCH
        set GH_ENVIRONMENT
        set GH_INPUT_ENVIRONMENT
        
        ## Manual trigger - workflow_dispatch
        if [[ "$GH_INPUT_ENVIRONMENT" != "" ]]; then
          GH_ENVIRONMENT=$(echo "$GH_INPUT_ENVIRONMENT" | tr [:upper:] [:lower:])
        
          # The PROD environment can use the $GH_DEFAULT_BRANCH branches
          if [[ "$GH_ENVIRONMENT" == "$GH_ENV_PROD" &&
              "$GH_CURRENT_BRANCH" == "$GH_DEFAULT_BRANCH" ]]; then :
        
          # TEST and STAGE environments can use the $GH_DEFAULT_BRANCH and release/hotfix branches
          elif [[ "$GH_ENVIRONMENT" =~ ^($GH_ENV_TST|$GH_ENV_STG)$ &&
              "$GH_CURRENT_BRANCH" =~ ^(release|hotfix|$GH_DEFAULT_BRANCH)\/?([a-z0-9._-]*)$ ]]; then :
        
          # The DEVELOP environment can use the main/master, release/hotfix and develop branches
          elif [[ "$GH_ENVIRONMENT" == "$GH_ENV_DEV" &&
              "$GH_CURRENT_BRANCH" =~ ^(develop|release|hotfix|$GH_DEFAULT_BRANCH)\/?([a-z0-9._-]*)$ ]]; then :
        
          # The SANDBOX environment can use all branches
          elif [[ "$GH_ENVIRONMENT" == "$GH_ENV_SBX" ]]; then :
        
          # Exit on invalid condition
          else
            echo "::error::Incorrect environment has been selected. Cannot use environment '$GH_INPUT_ENVIRONMENT' for branch '$GH_CURRENT_BRANCH' üëé"
            exit 1
          fi
        
          GH_ENVIRONMENT=$GH_INPUT_ENVIRONMENT
        
        ## Automated trigger - workflow_call
        # The DEVELOP environment can use the develop branch
        elif [[ "$GH_CURRENT_BRANCH" == "develop" ]]; then
          GH_ENVIRONMENT=$GH_ENV_DEV
        # The TEST environments can use release/hotfix branches
        elif [[ "$GH_CURRENT_BRANCH" =~ ^(release|hotfix)\/([0-9.]+)$ ]]; then
          GH_ENVIRONMENT=$GH_ENV_TST
        else
          echo "::error::Cannot define the environment for '$GH_CURRENT_BRANCH' branch üëé"
          exit 1
        fi
        
        echo "environment=$GH_ENVIRONMENT" >> "$GITHUB_OUTPUT"
        
        echo "::group::Debug Info"
        echo "Branch      - $GH_CURRENT_BRANCH üëç"
        echo "Environment - $GH_ENVIRONMENT üëç"
        echo "::endgroup::"
    - name: Create labels
      env:
        GH_TOKEN: ${{ github.token }}
      shell: bash
      run: |
        #!/bin/bash

        gh_label() {
          [[ -n "$1" && -n "$2" ]] && gh label create $1 --description "Environment" --color "$2" --force
        }

        gh_label ${{ inputs.sandbox_environment }} 2E86C1
        gh_label ${{ inputs.develop_environment }} 229954
        gh_label ${{ inputs.test_environment }} D4AC0D
        gh_label ${{ inputs.stage_environment }} BA4A00
        gh_label ${{ inputs.production_environment }} 839192
