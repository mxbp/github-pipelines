---
  name: Docker
  description: Docker build and push
  inputs:
    dockerfile_path:
      description: Dockerfile path
      required: false
    dockerfile_name:
      description: Dockerfile name
      required: false
    docker_registry:
      description: Docker registry
      required: false
    docker_repository:
      description: Docker repository
      required: false
    aws_access_secret_key:
      description: AWS access and secret key exist
      required: false
    docker_username:
      description: Docker username
      required: false
    docker_password:
      description: Docker password
      required: false
    aws_role_arn:
      description: AWS role
      required: false
    aws_access_key_id:
      description: AWS access key
      required: false
    aws_secret_access_key:
      description: AWS secret key
      required: false
  runs:
    using: composite
    steps:
      - name: Download source artifact
        uses: actions/download-artifact@v3
        with:
          name: app-source-${{ github.run_number }}
          path: ${{ github.workspace }}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Context for Buildx
        shell: bash
        run: docker context create ${{ github.event.repository.name }}
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          endpoint: ${{ github.event.repository.name }}
      - name: Configure AWS credentials
        id: aws-config
        if: github.event_name != 'pull_request' && inputs.aws_role_arn != null
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ inputs.aws_role_arn }}
      - name: Login to Amazon ECR
        id: aws-login
        if: steps.aws-config.outcome == 'success'
        uses: aws-actions/amazon-ecr-login@v2
      - name: Get docker meta
        id: docker-meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.aws-login.outputs.registry == null && inputs.docker_registry || steps.aws-login.outputs.registry }}/${{ inputs.docker_repository }}
          tags: |
            type=ref,event=branch,suffix=-${{ github.run_number }}
            type=ref,event=pr,suffix=-${{ github.run_number }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
      - name: Login to ${{ inputs.docker_registry }} container registry
        if: github.event_name != 'pull_request' && steps.aws-config.outcome == 'skipped'
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.docker_registry }}
          username: >
# FIXME:
            ${{ inputs.aws_access_secret_key == 'true' && secrets.aws_access_key_id ||
              (secrets.docker_username == null && github.actor || secrets.docker_username) }}
          password: >
# FIXME:
            ${{ inputs.aws_access_secret_key == 'true' && secrets.aws_secret_access_key ||
              (secrets.docker_password == null && github.token || secrets.docker_password) }}
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ inputs.dockerfile_path }}/${{ inputs.dockerfile_name }}
          load: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          platforms: linux/amd64
      - name: Anchore scan
        uses: mxbp/github-pipelines/actions/quality-gates-anchore@main
        with:
          image: ${{ steps.docker-meta.outputs.tags }}
      - name: Push
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ inputs.dockerfile_path }}/${{ inputs.dockerfile_name }}
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          platforms: linux/amd64
